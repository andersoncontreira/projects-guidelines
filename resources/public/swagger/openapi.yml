components:
  schemas:
    HateosProductGetResponse:
      properties:
        code:
          example: 1
          type: integer
        data:
          $ref: '#/components/schemas/Product'
        label:
          example: common.success
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        message:
          example: Success
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        params:
          items:
            type: string
          type: array
        success:
          example: true
          type: boolean
      required:
      - code
      type: object
    HateosProductListResponse:
      properties:
        code:
          example: 1
          type: integer
        control:
          $ref: '#/components/schemas/RequestControl'
        data:
          items:
            $ref: '#/components/schemas/Product'
          type: array
        label:
          example: common.success
          type: string
        message:
          example: Success
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        params:
          items:
            type: string
          type: array
        success:
          example: true
          type: boolean
      required:
      - code
      type: object
    Link:
      properties:
        href:
          type: string
        method:
          type: string
        rel:
          type: string
      type: object
    Meta:
      properties:
        first:
          format: url
          type: string
        href:
          format: url
          type: string
        last:
          format: url
          type: string
        next:
          format: url
          type: string
        previous:
          format: url
          type: string
      type: object
    Product:
      properties:
        active:
          enum:
          - 0
          - 1
          type: integer
        created_at:
          format: date-time
          type: string
        deleted_at:
          format: date-time
          type: string
        description:
          example: "Common Pencil Description"
          type: string
        id:
          example: 1
          type: integer
        name:
          example: "Common Pencil"
          type: string
        sku:
          example: 1
          type: integer
        supplier_id:
          example: 1
          type: integer
        updated_at:
          format: date-time
          type: string
        uuid:
          example: 4bcad46b-6978-488f-8153-1c49f8a45244
          format: uuid
          type: string
      type: object
    ProductCompleteUpdateRequest:
      properties:
        active:
          enum:
          - 0
          - 1
          type: integer
        description:
          example: "Common Pencil Description"
          type: string
        name:
          example: "Common Pencil"
          type: string
        sku:
          example: 1
          type: integer
        supplier_id:
          example: 1
          type: integer
      type: object
    ProductCreateErrorResponse:
      properties:
        code:
          example: 17
          type: integer
        details:
          type: string
        label:
          example: common.error.create_error
          type: string
        message:
          example: Unable to create the record
          type: string
        params:
          items:
            type: string
          type: array
        success:
          example: false
          type: boolean
        trace:
          type: string
      required:
      - code
      type: object
    ProductCreateRequest:
      properties:
        active:
          enum:
          - 0
          - 1
          type: integer
        description:
          example: "Common Pencil Description"
          type: string
        name:
          example: "Common Pencil"
          type: string
        sku:
          example: 1
          type: integer
        supplier_id:
          example: 1
          type: integer
      type: object
    ProductCreateResponse:
      properties:
        code:
          example: 1
          type: integer
        data:
          $ref: '#/components/schemas/Product'
        label:
          example: common.success
          type: string
        message:
          example: Success
          type: string
        params:
          items:
            type: string
          type: array
        success:
          example: true
          type: boolean
      required:
      - code
      type: object
    ProductGetErrorResponse:
      properties:
        code:
          example: 14
          type: integer
        details:
          type: string
        label:
          example: common.error.find_error
          type: string
        message:
          example: Unable to find the record
          type: string
        params:
          items:
            type: string
          type: array
        success:
          example: false
          type: boolean
        trace:
          type: string
      required:
      - code
      type: object
    ProductListErrorResponse:
      properties:
        code:
          example: 11
          type: integer
        details:
          type: string
        label:
          example: common.error.list_error
          type: string
        message:
          example: Unable to return the list data, please review your request
          type: string
        params:
          items:
            type: string
          type: array
        success:
          example: false
          type: boolean
        trace:
          type: string
      required:
      - code
      type: object
    ProductSoftDeleteErrorResponse:
      properties:
        code:
          example: 18
          type: integer
        details:
          type: string
        label:
          example: common.error.update_error
          type: string
        message:
          example: Unable to update the record
          type: string
        params:
          items:
            type: string
          type: array
        success:
          example: false
          type: boolean
        trace:
          type: string
      required:
      - code
      type: object
    ProductSoftDeleteResponse:
      properties:
        code:
          example: 1
          type: integer
        data:
          example:
            deleted: true
          type: object
        label:
          example: common.success
          type: string
        message:
          example: Success
          type: string
        params:
          items:
            type: string
          type: array
        success:
          example: true
          type: boolean
      required:
      - code
      type: object
    ProductSoftUpdateRequest:
      properties:
        field:
          example: value
          type: string
      type: object
    ProductUpdateErrorResponse:
      properties:
        code:
          example: 18
          type: integer
        details:
          type: string
        label:
          example: common.error.update_error
          type: string
        message:
          example: Unable to update the record
          type: string
        params:
          items:
            type: string
          type: array
        success:
          example: false
          type: boolean
        trace:
          type: string
      required:
      - code
      type: object
    ProductUpdateResponse:
      properties:
        code:
          example: 1
          type: integer
        data:
          $ref: '#/components/schemas/Product'
        label:
          example: common.success
          type: string
        message:
          example: Success
          type: string
        params:
          items:
            type: string
          type: array
        success:
          example: true
          type: boolean
      required:
      - code
      type: object
    RequestControl:
      properties:
        count:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
      required:
      - limit
      type: object
info:
  title: project-name
  version: 1.0.2
openapi: 3.0.2
paths:
  /alive:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckSchema'
          description: Success response
        '424':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckSchema'
          description: Failed dependency response
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckSchema'
          description: Service unavailable response
      summary: Service Health Method
  /v1/product:
    get:
      parameters:
      - description: List limit
        in: query
        name: limit
        required: false
        schema:
          example: 20
          type: int
      - description: List offset
        in: query
        name: offset
        required: false
        schema:
          example: 0
          type: int
      - description: Filter fields with comma
        in: query
        name: fields
        required: false
        schema:
          example: null
          type: string
      - description: Ordination of list
        in: query
        name: order_by
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
      - description: Sorting of the list
        in: query
        name: sort_by
        required: false
        schema:
          example: id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HateosProductListResponse'
          description: Success response
        4xx:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListErrorResponse'
          description: Error response
        5xx:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListErrorResponse'
          description: Service fail response
      summary: Product List
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
        description: Product to be created
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateResponse'
          description: Success response
        4xx:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateErrorResponse'
          description: Error response
        5xx:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateErrorResponse'
          description: Service fail response
      summary: Product Create
  /v1/product/{uuid}:
    delete:
      parameters:
      - description: Product Id
        in: path
        name: uuid
        required: true
        schema:
          example: 4bcad46b-6978-488f-8153-1c49f8a45244
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSoftDeleteResponse'
          description: Success response
        4xx:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSoftDeleteErrorResponse'
          description: Error response
        5xx:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSoftDeleteErrorResponse'
          description: Service fail response
      summary: Soft Product Delete
    get:
      parameters:
      - description: Product Id
        in: path
        name: uuid
        required: true
        schema:
          example: 4bcad46b-6978-488f-8153-1c49f8a45244
          format: uuid
          type: string
      - description: Filter fields with comma
        in: query
        name: fields
        required: false
        schema:
          example: null
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HateosProductGetResponse'
          description: Success response
        4xx:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGetErrorResponse'
          description: Error response
        5xx:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGetErrorResponse'
          description: Service fail response
      summary: Product Get
    patch:
      parameters:
      - description: Product Id
        in: path
        name: uuid
        required: true
        schema:
          example: 4bcad46b-6978-488f-8153-1c49f8a45244
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSoftUpdateRequest'
        description: Product field to be updated
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUpdateResponse'
          description: Success response
        4xx:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUpdateErrorResponse'
          description: Error response
        5xx:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUpdateErrorResponse'
          description: Service fail response
      summary: Soft Product Update
    put:
      parameters:
      - description: Product Id
        in: path
        name: uuid
        required: true
        schema:
          example: 4bcad46b-6978-488f-8153-1c49f8a45244
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCompleteUpdateRequest'
        description: Product to be updated
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUpdateResponse'
        4xx:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUpdateErrorResponse'
          description: Error response
        5xx:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUpdateErrorResponse'
          description: Service fail response
      summary: Complete Product Update
servers:
- description: Development server
  url: http://localhost:5000
- description: Development server
  url: http://localhost:5000
